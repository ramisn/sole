<% @body_id = 'stores' %>
<p><%= link_to t('back_to_promotions'), merchant_store_promotions_path(@store) %></p>
<h1><%= t("editing_promotion") %></h1>

<p class="tip">Tip: To make the promotion automatically checked in the shopping cart without the customer having to put in a coupon code, just leave the code field blank.</p>

<%= form_for [:merchant, @store, @promotion] do |f| %>
  <%= render "/spree/admin/promotions/form", :f => f %>
   
  <hr />
  
  <%= render "merchant/promotions/product_field", :f => f %>
  
  <%= render "admin/shared/edit_resource_links" %>
<% end %>

<fieldset id="rule_fields">
  <legend><%= t(:rules) %></legend>

  <%= form_for [:merchant, @store, @promotion] do |f| %>
    <p>
      <% for policy in Promotion::MATCH_POLICIES %>
        <label><%= f.radio_button :match_policy, policy %> <%= t "promotion_form.match_policies.#{policy}" %></label> &nbsp;
      <% end %>
    </p>
    <div id="rules" class="filter_list">
      <% if @promotion.rules.any? %>
        <%= render :partial => '/spree/admin/promotions/promotion_rule', :collection => @promotion.rules, :f => f %>
      <% else %>
        <!-- <p><%= t('no_rules_added') %></p> -->
      <% end %>
    </div>
    <p class="form-buttons">
      <%= button t("update") %>
    </p>
  <% end %>

  <%= form_tag(main_app.merchant_store_promotion_promotion_rules_path(@store, @promotion), 'data-remote' => true,
                                                                 :id => 'new_product_rule_form') do  %>
    <% options = options_for_select( @promotion_rules.map {|name| [ t("promotion_rule_types.#{name.name.demodulize.underscore}.name"), name] } ) %>
    <p>
      <label for="promotion_rule_type"><%= t('add_rule_of_type') %></label>
      <%= select_tag("promotion_rule[type]", options) %>
      <input type="submit" value="<%= t('add') %>" />
    </p>
  <% end %>

</fieldset>



<% content_for :head do %>
  <%= javascript_include_tag '/assets/admin/promotions.js' %>
  <%= stylesheet_link_tag '/assets/admin/promotions.css' %>
<% end %>
